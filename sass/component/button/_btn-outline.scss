// outline buttons
@mixin button-outline($color, $color2, $shadow: 'false') {
    color: $color;
    border: 1px solid rgba($color, 0.2);
    transition: 0.3s background-color;
    background: none;
    line-height: 1.25;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    position: relative;
    border-radius: 8px;
    @include text-cap-subtitle;
    &.white-bg:before{
        position: absolute;
        z-index: -1;
        content: "";
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: $white;
    }
    &.active,
    &:active {
        color: $color2;
        border-color: $color2;
        background-color: transparent;
    }
    &:hover,
    &:focus {
        // color: $color2;
        // border-color: $color2;
        // background-color: transparent;

        // background: $white;
        // color: $black;
        // border-color: $white;
        background: $color;
        color: $color2;
        border-color: $color;
        box-shadow: 0 0 3px rgba(black, 0.2) ,  0 0 5px rgba(black, 0.2);
    }
    &.disabled,
    &:disabled {
        color: $color;
        opacity: 0.7;
        background-color: transparent;
    }
    .text{
        height: 0.875em;
    }
    .icon .ion,
    .icon .fa{
    }
    .text, .icon{
        line-height: 1;
        position: relative;
    }
    >.icon + .text{
        margin-left: 0.75em;
    }
    >.text + .icon{
        margin-left: 0.75em;
    }
}

.btn-outline{
    
    @include button-outline($black, $white);
}
// outlined button
@each $color, $value in $theme-colors {
    @if $value == $white {
      .btn-outline-white {
        // @include button-outline($value, $primary);
        @include button-outline($value, $black, 'true');
      }
    } @else {
      .btn-outline-#{""+$color} {
        @include button-outline($value, $white);
      }
    }
  }